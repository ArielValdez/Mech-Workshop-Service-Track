{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar ProgressBar = function ProgressBar(_ref) {\n  var step = _ref.step,\n      steps = _ref.steps,\n      height = _ref.height;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var animatedValue = useRef(new Animated.Value(-1000)).current;\n  var reactive = useRef(new Animated.Value(-1000)).current;\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      onLayout: function onLayout(e) {\n        var newWidth = e.nativeEvent.layout.width;\n        setWidth(newWidth);\n      },\n      style: {\n        height: height,\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        borderRadius: height,\n        overflow: 'hidden',\n        width: '85%',\n        alignSelf: 'center'\n      },\n      children: _jsx(Animated.View, {\n        style: {\n          height: height,\n          width: '100%',\n          borderRadius: height,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          transform: [{\n            translateX: animatedValue\n          }]\n        }\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default ProgressBar;","map":{"version":3,"names":["React","useRef","useState","useEffect","ProgressBar","step","steps","height","width","setWidth","animatedValue","Animated","Value","current","reactive","e","newWidth","nativeEvent","layout","backgroundColor","borderRadius","overflow","alignSelf","position","left","top","transform","translateX","styles","StyleSheet","create","container"],"sources":["C:/Users/VALDEZ GAMING/Documents/GitHub/Mech-Workshop-Service-Track/MWST-Frontend/Service/src/components/ProgressBar.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport { View, Text, StyleSheet, Animated, useWindowDimensions } from 'react-native'\r\n\r\nconst ProgressBar = ({step, steps, height}) => {\r\n    const [width, setWidth] = useState(0)\r\n    const animatedValue = useRef(new Animated.Value(-1000)).current\r\n    const reactive = useRef(new Animated.Value(-1000)).current\r\n\r\n    // useEffect(() => {\r\n    //     Animated.timing(animatedValue, {\r\n    //         toValue: reactive,\r\n    //         duration:  300,\r\n    //         useNativeDriver: true,\r\n    //     }).start()\r\n    // }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     reactive.setValue(-width + (width * step) / steps)\r\n    // }, [step, width])\r\n\r\n    return (\r\n        <>\r\n            {/*       \r\n            <Text style={{\r\n                fontSize: 12,\r\n                fontWeight: '900',\r\n                marginBottom: 4,\r\n                alignSelf: 'center',\r\n            }}>\r\n                {step}/{steps}\r\n            </Text> \r\n            */}\r\n            <View onLayout={(e) => {\r\n                const newWidth = e.nativeEvent.layout.width\r\n                setWidth(newWidth)\r\n            }} \r\n            style={{\r\n                height, \r\n                backgroundColor: 'rgba(0,0,0,0.1)',\r\n                borderRadius: height,\r\n                overflow: 'hidden',\r\n                width: '85%',\r\n                alignSelf: 'center'\r\n            }}>\r\n                <Animated.View style={{\r\n                    height,\r\n                    width: '100%',\r\n                    borderRadius: height,\r\n                    backgroundColor: 'rgba(0,0,0,0.5)',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    top: 0,\r\n                    transform: [{\r\n                        translateX: animatedValue\r\n                    }]\r\n                }}>\r\n\r\n                </Animated.View>\r\n            </View>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n    },\r\n})\r\n\r\nexport default ProgressBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA2B;EAAA,IAAzBC,IAAyB,QAAzBA,IAAyB;EAAA,IAAnBC,KAAmB,QAAnBA,KAAmB;EAAA,IAAZC,MAAY,QAAZA,MAAY;;EAC3C,gBAA0BL,QAAQ,CAAC,CAAD,CAAlC;EAAA;EAAA,IAAOM,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,aAAa,GAAGT,MAAM,CAAC,IAAIU,QAAQ,CAACC,KAAb,CAAmB,CAAC,IAApB,CAAD,CAAN,CAAkCC,OAAxD;EACA,IAAMC,QAAQ,GAAGb,MAAM,CAAC,IAAIU,QAAQ,CAACC,KAAb,CAAmB,CAAC,IAApB,CAAD,CAAN,CAAkCC,OAAnD;EAeA,OACI;IAAA,UAWI,KAAC,IAAD;MAAM,QAAQ,EAAE,kBAACE,CAAD,EAAO;QACnB,IAAMC,QAAQ,GAAGD,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBV,KAAtC;QACAC,QAAQ,CAACO,QAAD,CAAR;MACH,CAHD;MAIA,KAAK,EAAE;QACHT,MAAM,EAANA,MADG;QAEHY,eAAe,EAAE,iBAFd;QAGHC,YAAY,EAAEb,MAHX;QAIHc,QAAQ,EAAE,QAJP;QAKHb,KAAK,EAAE,KALJ;QAMHc,SAAS,EAAE;MANR,CAJP;MAAA,UAYI,KAAC,QAAD,CAAU,IAAV;QAAe,KAAK,EAAE;UAClBf,MAAM,EAANA,MADkB;UAElBC,KAAK,EAAE,MAFW;UAGlBY,YAAY,EAAEb,MAHI;UAIlBY,eAAe,EAAE,iBAJC;UAKlBI,QAAQ,EAAE,UALQ;UAMlBC,IAAI,EAAE,CANY;UAOlBC,GAAG,EAAE,CAPa;UAQlBC,SAAS,EAAE,CAAC;YACRC,UAAU,EAAEjB;UADJ,CAAD;QARO;MAAtB;IAZJ;EAXJ,EADJ;AAyCH,CA3DD;;AA6DA,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC7BC,SAAS,EAAE;AADkB,CAAlB,CAAf;AAMA,eAAe3B,WAAf"},"metadata":{},"sourceType":"module"}