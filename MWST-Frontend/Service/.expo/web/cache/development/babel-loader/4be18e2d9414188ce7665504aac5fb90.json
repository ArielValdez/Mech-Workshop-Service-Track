{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport \"./login.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _useState = useState(\"hide\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    popupStyle = _useState2[0],\n    showPopup = _useState2[1];\n\nvar popup = function popup() {\n  showPopup(\"login-popup\");\n  setTimeout(function () {\n    return showPopup(\"hide\");\n  }, 3000);\n};\n\nvar LoginForm = function LoginForm() {\n  return _jsxs(\"div\", {\n    className: \"cover\",\n    children: [_jsx(\"h1\", {\n      children: \" Login \"\n    }), _jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"username\"\n    }), _jsx(\"input\", {\n      type: \"password\",\n      placeholder: \"password\"\n    }), _jsx(\"div\", {\n      className: \"login-btn\",\n      onClick: popup,\n      children: \" Login \"\n    }), _jsx(\"p\", {\n      className: \"text\",\n      children: \" Or login using \"\n    }), _jsxs(\"div\", {\n      className: \"alt-login\",\n      children: [_jsx(\"div\", {\n        className: \"facebook\",\n        children: \" \"\n      }), _jsx(\"div\", {\n        className: \"google\",\n        children: \" \"\n      })]\n    }), _jsxs(\"div\", {\n      className: \"popupStyle\",\n      children: [_jsx(\"h3\", {\n        children: \" Login Failed \"\n      }), _jsx(\"p\", {\n        children: \" Username or Password Incorrect\"\n      })]\n    })]\n  });\n};\n\nexport default login;","map":{"version":3,"names":["React","useState","popupStyle","showPopup","popup","setTimeout","LoginForm","login"],"sources":["D:/projectsandtutorials/mech-workshop-service-track/front-end/service/components/login/login.js"],"sourcesContent":["//Delete login.css if needed\n\nimport React from 'react';\nimport \"./login.css\";\n\nconst [popupStyle, showPopup] = useState(\"hide\")\n\nconst popup = () => {\n    showPopup(\"login-popup\")\n    setTimeout(() => showPopup(\"hide\"), 3000)\n}\n\nconst LoginForm = () => {\n    return (\n        <div className=\"cover\">\n            <h1> Login </h1>\n            <input type=\"text\" placeholder=\"username\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            \n            <div className=\"login-btn\" onClick={popup}> Login </div>\n\n            {/* This block below offers an alternate login for the user,\n            that may or may not be required for this app */}\n\n            <p className=\"text\"> Or login using </p>\n            <div className=\"alt-login\">\n                <div className=\"facebook\"> </div>\n                <div className=\"google\"> </div>\n            </div>\n\n            <div className={\"popupStyle\"}>\n                <h3> Login Failed </h3>\n                <p> Username or Password Incorrect</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default login;\n\n//Video: https://www.youtube.com/watch?v=4BhhGs0PFHU\n//Another Video: https://www.youtube.com/watch?v=W1RWa0aU1pE&t=2s\n//Yet Another Video: https://www.youtube.com/watch?v=d1j1NcRMvV0 | https://github.com/moses-netshitangani/responsive-login-form\n//Using hooks: https://www.youtube.com/watch?v=8hU0I8rY4u4\n"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;;;AAEA,gBAAgCC,QAAQ,CAAC,MAAD,CAAxC;AAAA;AAAA,IAAOC,UAAP;AAAA,IAAmBC,SAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;EAChBD,SAAS,CAAC,aAAD,CAAT;EACAE,UAAU,CAAC;IAAA,OAAMF,SAAS,CAAC,MAAD,CAAf;EAAA,CAAD,EAA0B,IAA1B,CAAV;AACH,CAHD;;AAKA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;EACpB,OACI;IAAK,SAAS,EAAC,OAAf;IAAA,WACI;MAAA;IAAA,EADJ,EAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAC;IAA/B,EAFJ,EAGI;MAAO,IAAI,EAAC,UAAZ;MAAuB,WAAW,EAAC;IAAnC,EAHJ,EAKI;MAAK,SAAS,EAAC,WAAf;MAA2B,OAAO,EAAEF,KAApC;MAAA;IAAA,EALJ,EAUI;MAAG,SAAS,EAAC,MAAb;MAAA;IAAA,EAVJ,EAWI;MAAK,SAAS,EAAC,WAAf;MAAA,WACI;QAAK,SAAS,EAAC,UAAf;QAAA;MAAA,EADJ,EAEI;QAAK,SAAS,EAAC,QAAf;QAAA;MAAA,EAFJ;IAAA,EAXJ,EAgBI;MAAK,SAAS,EAAE,YAAhB;MAAA,WACI;QAAA;MAAA,EADJ,EAEI;QAAA;MAAA,EAFJ;IAAA,EAhBJ;EAAA,EADJ;AAwBH,CAzBD;;AA2BA,eAAeG,KAAf"},"metadata":{},"sourceType":"module"}