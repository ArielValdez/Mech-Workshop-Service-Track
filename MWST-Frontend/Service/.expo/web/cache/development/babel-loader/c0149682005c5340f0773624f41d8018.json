{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport theme from \"../Theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CustomButton = function CustomButton(_ref) {\n  var onPress = _ref.onPress,\n    text = _ref.text,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'Primary' : _ref$type,\n    bgColor = _ref.bgColor,\n    fgColor = _ref.fgColor,\n    marginVertical = _ref.marginVertical,\n    padding = _ref.padding,\n    width = _ref.width;\n  return _jsx(Pressable, {\n    onPress: onPress,\n    style: [styles.container, styles[\"container\" + type], bgColor ? {\n      backgroundColor: bgColor\n    } : {}, marginVertical ? {\n      marginVertical: marginVertical\n    } : {}, padding ? {\n      padding: padding\n    } : {}, width ? {\n      width: width\n    } : {}],\n    children: _jsx(Text, {\n      style: [styles.text, styles[\"text\" + type], fgColor ? {\n        color: fgColor\n      } : {}],\n      children: text\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    padding: 15,\n    marginVertical: 5,\n    alignItems: 'center',\n    borderRadius: 5\n  },\n  containerPrimary: {\n    backgroundColor: theme.colors.secondary\n  },\n  containerSecondary: {\n    backgroundColor: 'white',\n    borderColor: '#3B71F3',\n    borderWidth: 2\n  },\n  containerTertiary: {},\n  text: {\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  textSecondary: {\n    color: '#3B71F3'\n  },\n  textTertiary: {\n    color: '#bfbaba'\n  }\n});\nexport default CustomButton;","map":{"version":3,"names":["React","theme","CustomButton","onPress","text","type","bgColor","fgColor","marginVertical","padding","width","styles","container","backgroundColor","color","StyleSheet","create","alignItems","borderRadius","containerPrimary","colors","secondary","containerSecondary","borderColor","borderWidth","containerTertiary","fontWeight","textSecondary","textTertiary"],"sources":["C:/Users/Mariopp126/Escritorio/Proyecto-final/Mech-Workshop-Service-Track/Front-End/Service/src/components/CustomButton.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Pressable } from \"react-native\"\r\nimport theme from '../Theme'\r\n\r\nconst CustomButton = ({ onPress, text, type = 'Primary', bgColor, fgColor, marginVertical, padding, width}) => {\r\n    return (\r\n        <Pressable \r\n            onPress={onPress} \r\n            style={[\r\n                styles.container,\r\n                styles[`container${type}`],\r\n                bgColor ? {backgroundColor: bgColor} : {},\r\n                marginVertical ? {marginVertical: marginVertical} : {},\r\n                padding ? {padding: padding} : {},\r\n                width ? {width: width} : {}\r\n            ]}\r\n        >\r\n            <Text \r\n                style={[\r\n                    styles.text,\r\n                    styles[`text${type}`],\r\n                    fgColor ? {color: fgColor} : {}\r\n                ]}\r\n            >\r\n                {text}\r\n            </Text>\r\n        </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {       \r\n        width: '100%',\r\n        padding: 15,\r\n        marginVertical: 5,\r\n\r\n        alignItems: 'center',\r\n        borderRadius: 5\r\n    },\r\n\r\n    containerPrimary: {\r\n        backgroundColor: theme.colors.secondary,\r\n    },\r\n    containerSecondary: {\r\n        backgroundColor: 'white',\r\n        \r\n        borderColor: '#3B71F3',\r\n        borderWidth: 2,\r\n    },\r\n    containerTertiary: {\r\n    },\r\n\r\n    text: {\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    },\r\n    textSecondary: {\r\n        color: '#3B71F3',\r\n    },\r\n    textTertiary: {\r\n        color: '#bfbaba',\r\n    }\r\n})\r\n\r\nexport default CustomButton"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAE1B,OAAOC,KAAK;AAAgB;AAE5B,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAA6F;EAAA,IAAvFC,OAAO,QAAPA,OAAO;IAAEC,IAAI,QAAJA,IAAI;IAAA,iBAAEC,IAAI;IAAJA,IAAI,0BAAG,SAAS;IAAEC,OAAO,QAAPA,OAAO;IAAEC,OAAO,QAAPA,OAAO;IAAEC,cAAc,QAAdA,cAAc;IAAEC,OAAO,QAAPA,OAAO;IAAEC,KAAK,QAALA,KAAK;EACrG,OACI,KAAC,SAAS;IACN,OAAO,EAAEP,OAAQ;IACjB,KAAK,EAAE,CACHQ,MAAM,CAACC,SAAS,EAChBD,MAAM,eAAaN,IAAI,CAAG,EAC1BC,OAAO,GAAG;MAACO,eAAe,EAAEP;IAAO,CAAC,GAAG,CAAC,CAAC,EACzCE,cAAc,GAAG;MAACA,cAAc,EAAEA;IAAc,CAAC,GAAG,CAAC,CAAC,EACtDC,OAAO,GAAG;MAACA,OAAO,EAAEA;IAAO,CAAC,GAAG,CAAC,CAAC,EACjCC,KAAK,GAAG;MAACA,KAAK,EAAEA;IAAK,CAAC,GAAG,CAAC,CAAC,CAC7B;IAAA,UAEF,KAAC,IAAI;MACD,KAAK,EAAE,CACHC,MAAM,CAACP,IAAI,EACXO,MAAM,UAAQN,IAAI,CAAG,EACrBE,OAAO,GAAG;QAACO,KAAK,EAAEP;MAAO,CAAC,GAAG,CAAC,CAAC,CACjC;MAAA,UAEDH;IAAI;EACF,EACC;AAEpB,CAAC;AAED,IAAMO,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC7BJ,SAAS,EAAE;IACPF,KAAK,EAAE,MAAM;IACbD,OAAO,EAAE,EAAE;IACXD,cAAc,EAAE,CAAC;IAEjBS,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAClB,CAAC;EAEDC,gBAAgB,EAAE;IACdN,eAAe,EAAEZ,KAAK,CAACmB,MAAM,CAACC;EAClC,CAAC;EACDC,kBAAkB,EAAE;IAChBT,eAAe,EAAE,OAAO;IAExBU,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE;EACjB,CAAC;EACDC,iBAAiB,EAAE,CACnB,CAAC;EAEDrB,IAAI,EAAE;IACFsB,UAAU,EAAE,MAAM;IAClBZ,KAAK,EAAE;EACX,CAAC;EACDa,aAAa,EAAE;IACXb,KAAK,EAAE;EACX,CAAC;EACDc,YAAY,EAAE;IACVd,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAeZ,YAAY"},"metadata":{},"sourceType":"module"}