{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomButton from \"../components/CustomButton\";\nimport CustomInput from \"../components/CustomInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ConfirmEmailScreen = function ConfirmEmailScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  var t = useTranslation.t,\n      i18n = useTranslation.i18n;\n\n  var onConfirmPressed = function onConfirmPressed() {\n    console.warn('Confirm pressed');\n  };\n\n  var onResendPressed = function onResendPressed() {\n    console.warn('Resend pressed');\n  };\n\n  var onReturnPressed = function onReturnPressed() {\n    console.warn('Return pressed');\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: t('emailConfirmation')\n      }), _jsx(CustomInput, {\n        placeholder: t('confirmationCode'),\n        value: code,\n        setValue: setCode,\n        keyboardType: \"numeric\"\n      }), _jsx(CustomButton, {\n        onPress: onConfirmPressed,\n        text: t('confirm')\n      }), _jsx(CustomButton, {\n        onPress: onResendPressed,\n        text: t('resend'),\n        type: \"Secondary\"\n      }), _jsx(CustomButton, {\n        onPress: onReturnPressed,\n        text: t('return'),\n        type: \"Tertiary\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  }\n});\nexport default ConfirmEmailScreen;","map":{"version":3,"names":["React","useState","useTranslation","CustomButton","CustomInput","ConfirmEmailScreen","code","setCode","t","i18n","onConfirmPressed","console","warn","onResendPressed","onReturnPressed","styles","container","title","StyleSheet","create","flex","alignItems","padding","fontSize","fontWeight","color","margin"],"sources":["C:/Users/VALDEZ GAMING/Documents/GitHub/Mech-Workshop-Service-Track/MWST-Frontend/Service/src/screens/ConfirmEmailScreen.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { View, Text, StyleSheet, useWindowDimensions, ScrollView } from 'react-native'\r\nimport CustomButton from '../components/CustomButton'\r\nimport CustomInput from '../components/CustomInput'\r\n\r\nconst ConfirmEmailScreen = () => {\r\n    const [ code, setCode ] = useState('')\r\n\r\n    const { t, i18n } = useTranslation\r\n\r\n    const onConfirmPressed = () => {\r\n        console.warn('Confirm pressed')\r\n    }\r\n\r\n    const onResendPressed = () => {\r\n        console.warn('Resend pressed')\r\n    }\r\n\r\n    const onReturnPressed = () => {\r\n        console.warn('Return pressed')\r\n    } \r\n\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>{t('emailConfirmation')}</Text>\r\n\r\n                <CustomInput placeholder={t('confirmationCode')} value={code} setValue={setCode} keyboardType='numeric'/>\r\n\r\n                <CustomButton onPress={onConfirmPressed} text={t('confirm')}/>\r\n                <CustomButton onPress={onResendPressed} text={t('resend')} type=\"Secondary\"/>\r\n                <CustomButton onPress={onReturnPressed} text={t('return')} type=\"Tertiary\"/>\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1, \r\n        alignItems: 'center',\r\n        padding: 20\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        color: '#051C60',\r\n        margin: 10,\r\n    },\r\n})\r\n\r\nexport default ConfirmEmailScreen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;;;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;EAC7B,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAQK,IAAR;EAAA,IAAcC,OAAd;;EAEA,IAAQC,CAAR,GAAoBN,cAApB,CAAQM,CAAR;EAAA,IAAWC,IAAX,GAAoBP,cAApB,CAAWO,IAAX;;EAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;IAC3BC,OAAO,CAACC,IAAR,CAAa,iBAAb;EACH,CAFD;;EAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1BF,OAAO,CAACC,IAAR,CAAa,gBAAb;EACH,CAFD;;EAIA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1BH,OAAO,CAACC,IAAR,CAAa,gBAAb;EACH,CAFD;;EAIA,OACI,KAAC,UAAD;IAAY,4BAA4B,EAAE,KAA1C;IAAA,UACI,MAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACC,SAApB;MAAA,WACI,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,KAApB;QAAA,UAA4BT,CAAC,CAAC,mBAAD;MAA7B,EADJ,EAGI,KAAC,WAAD;QAAa,WAAW,EAAEA,CAAC,CAAC,kBAAD,CAA3B;QAAiD,KAAK,EAAEF,IAAxD;QAA8D,QAAQ,EAAEC,OAAxE;QAAiF,YAAY,EAAC;MAA9F,EAHJ,EAKI,KAAC,YAAD;QAAc,OAAO,EAAEG,gBAAvB;QAAyC,IAAI,EAAEF,CAAC,CAAC,SAAD;MAAhD,EALJ,EAMI,KAAC,YAAD;QAAc,OAAO,EAAEK,eAAvB;QAAwC,IAAI,EAAEL,CAAC,CAAC,QAAD,CAA/C;QAA2D,IAAI,EAAC;MAAhE,EANJ,EAOI,KAAC,YAAD;QAAc,OAAO,EAAEM,eAAvB;QAAwC,IAAI,EAAEN,CAAC,CAAC,QAAD,CAA/C;QAA2D,IAAI,EAAC;MAAhE,EAPJ;IAAA;EADJ,EADJ;AAaH,CA9BD;;AAgCA,IAAMO,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC7BH,SAAS,EAAE;IACPI,IAAI,EAAE,CADC;IAEPC,UAAU,EAAE,QAFL;IAGPC,OAAO,EAAE;EAHF,CADkB;EAM7BL,KAAK,EAAE;IACHM,QAAQ,EAAE,EADP;IAEHC,UAAU,EAAE,MAFT;IAGHC,KAAK,EAAE,SAHJ;IAIHC,MAAM,EAAE;EAJL;AANsB,CAAlB,CAAf;AAcA,eAAerB,kBAAf"},"metadata":{},"sourceType":"module"}