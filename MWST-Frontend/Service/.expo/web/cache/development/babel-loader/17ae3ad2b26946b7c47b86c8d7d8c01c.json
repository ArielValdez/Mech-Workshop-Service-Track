{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport theme from \"../Theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var value = _ref.value,\n      setValue = _ref.setValue,\n      placeholder = _ref.placeholder,\n      secureTextEntry = _ref.secureTextEntry,\n      keyboardType = _ref.keyboardType,\n      errorMessage = _ref.errorMessage,\n      pattern = _ref.pattern,\n      padding = _ref.padding,\n      bgColor = _ref.bgColor;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showErrorText = _useState2[0],\n      setShowErrorText = _useState2[1];\n\n  var handleChange = function handleChange(value) {\n    if (typeof pattern !== 'undefined') {\n      var regex = new RegExp(pattern);\n\n      if (regex.test(value)) {\n        setShowErrorText(false);\n      } else {\n        setShowErrorText(true);\n      }\n    }\n\n    setValue(value);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: [styles.inputContainer, bgColor ? {\n        backgroundColor: bgColor\n      } : {}],\n      children: _jsx(TextInput, {\n        style: [styles.textInput, padding ? {\n          padding: padding\n        } : {}],\n        value: value,\n        onChangeText: handleChange,\n        placeholder: placeholder,\n        placeholderTextColor: 'rgba(0, 0, 0, 0.6)',\n        secureTextEntry: secureTextEntry,\n        keyboardType: keyboardType\n      })\n    }), showErrorText && _jsx(Text, {\n      style: styles.errorMessage,\n      children: errorMessage\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%'\n  },\n  inputContainer: {\n    backgroundColor: 'rgba(240, 231, 84, 0.5)',\n    width: '100%',\n    borderColor: theme.colors.darkSecondary,\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginVertical: 5\n  },\n  textInput: {},\n  errorMessage: {\n    color: 'red'\n  }\n});\nexport default CustomInput;","map":{"version":3,"names":["React","useRef","useState","theme","CustomInput","value","setValue","placeholder","secureTextEntry","keyboardType","errorMessage","pattern","padding","bgColor","showErrorText","setShowErrorText","handleChange","regex","RegExp","test","styles","container","inputContainer","backgroundColor","textInput","StyleSheet","create","width","borderColor","colors","darkSecondary","borderWidth","borderRadius","paddingHorizontal","paddingVertical","marginVertical","color"],"sources":["C:/Users/VALDEZ GAMING/Documents/GitHub/Mech-Workshop-Service-Track/MWST-Frontend/Service/src/components/CustomInput.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { View, TextInput, StyleSheet, Text } from 'react-native'\r\nimport theme from '../Theme'\r\n\r\nconst CustomInput = ({value, setValue, placeholder, secureTextEntry, keyboardType, errorMessage, pattern, padding, bgColor}) => {\r\n    const [ showErrorText, setShowErrorText ] = useState(false)\r\n\r\n    const handleChange = (value) => {\r\n        if (typeof pattern !== 'undefined') {\r\n            const regex = new RegExp(pattern)\r\n            if (regex.test(value)) {\r\n                setShowErrorText(false)\r\n            }\r\n            else {\r\n                setShowErrorText(true)\r\n            }\r\n        }\r\n\r\n        setValue(value)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={[styles.inputContainer, bgColor ? {backgroundColor: bgColor} : {}]}>\r\n                <TextInput style={[styles.textInput, padding ? {padding: padding} : {}]}\r\n                    value={value}\r\n                    onChangeText={handleChange}\r\n                    placeholder={placeholder}\r\n                    placeholderTextColor={'rgba(0, 0, 0, 0.6)'}\r\n                    secureTextEntry={secureTextEntry}\r\n                    keyboardType={keyboardType}\r\n                />\r\n            </View>\r\n            { showErrorText &&\r\n                <Text\r\n                    style={styles.errorMessage}\r\n                >\r\n                    {errorMessage}\r\n                </Text>\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: '100%',\r\n    },\r\n    inputContainer: {\r\n        backgroundColor: 'rgba(240, 231, 84, 0.5)',\r\n        width: '100%',\r\n\r\n        borderColor: theme.colors.darkSecondary,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 5,\r\n        marginVertical: 5\r\n    },\r\n    textInput: {\r\n    },\r\n    errorMessage: {\r\n        color: 'red',\r\n    },\r\n})\r\n\r\nexport default CustomInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;;;AAEA,OAAOC,KAAP;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA4G;EAAA,IAA1GC,KAA0G,QAA1GA,KAA0G;EAAA,IAAnGC,QAAmG,QAAnGA,QAAmG;EAAA,IAAzFC,WAAyF,QAAzFA,WAAyF;EAAA,IAA5EC,eAA4E,QAA5EA,eAA4E;EAAA,IAA3DC,YAA2D,QAA3DA,YAA2D;EAAA,IAA7CC,YAA6C,QAA7CA,YAA6C;EAAA,IAA/BC,OAA+B,QAA/BA,OAA+B;EAAA,IAAtBC,OAAsB,QAAtBA,OAAsB;EAAA,IAAbC,OAAa,QAAbA,OAAa;;EAC5H,gBAA4CX,QAAQ,CAAC,KAAD,CAApD;EAAA;EAAA,IAAQY,aAAR;EAAA,IAAuBC,gBAAvB;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACX,KAAD,EAAW;IAC5B,IAAI,OAAOM,OAAP,KAAmB,WAAvB,EAAoC;MAChC,IAAMM,KAAK,GAAG,IAAIC,MAAJ,CAAWP,OAAX,CAAd;;MACA,IAAIM,KAAK,CAACE,IAAN,CAAWd,KAAX,CAAJ,EAAuB;QACnBU,gBAAgB,CAAC,KAAD,CAAhB;MACH,CAFD,MAGK;QACDA,gBAAgB,CAAC,IAAD,CAAhB;MACH;IACJ;;IAEDT,QAAQ,CAACD,KAAD,CAAR;EACH,CAZD;;EAcA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEe,MAAM,CAACC,SAApB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAE,CAACD,MAAM,CAACE,cAAR,EAAwBT,OAAO,GAAG;QAACU,eAAe,EAAEV;MAAlB,CAAH,GAAgC,EAA/D,CAAb;MAAA,UACI,KAAC,SAAD;QAAW,KAAK,EAAE,CAACO,MAAM,CAACI,SAAR,EAAmBZ,OAAO,GAAG;UAACA,OAAO,EAAEA;QAAV,CAAH,GAAwB,EAAlD,CAAlB;QACI,KAAK,EAAEP,KADX;QAEI,YAAY,EAAEW,YAFlB;QAGI,WAAW,EAAET,WAHjB;QAII,oBAAoB,EAAE,oBAJ1B;QAKI,eAAe,EAAEC,eALrB;QAMI,YAAY,EAAEC;MANlB;IADJ,EADJ,EAWMK,aAAa,IACX,KAAC,IAAD;MACI,KAAK,EAAEM,MAAM,CAACV,YADlB;MAAA,UAGKA;IAHL,EAZR;EAAA,EADJ;AAqBH,CAtCD;;AAwCA,IAAMU,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC7BL,SAAS,EAAE;IACPM,KAAK,EAAE;EADA,CADkB;EAI7BL,cAAc,EAAE;IACZC,eAAe,EAAE,yBADL;IAEZI,KAAK,EAAE,MAFK;IAIZC,WAAW,EAAEzB,KAAK,CAAC0B,MAAN,CAAaC,aAJd;IAKZC,WAAW,EAAE,CALD;IAMZC,YAAY,EAAE,CANF;IAQZC,iBAAiB,EAAE,EARP;IASZC,eAAe,EAAE,CATL;IAUZC,cAAc,EAAE;EAVJ,CAJa;EAgB7BX,SAAS,EAAE,EAhBkB;EAkB7Bd,YAAY,EAAE;IACV0B,KAAK,EAAE;EADG;AAlBe,CAAlB,CAAf;AAuBA,eAAehC,WAAf"},"metadata":{},"sourceType":"module"}