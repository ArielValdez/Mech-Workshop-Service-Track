{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport CustomInput from \"../components/CustomInput\";\nimport CustomButton from \"../components/CustomButton\";\nimport Logo from \"../../assets/LogoOficial.png\";\nimport CheckBox from 'expo-checkbox';\nimport { EmailRegex, InvalidEmailMessage, PasswordRegex, InvalidPasswordMessage } from \"../Constants\";\nimport theme from \"../Theme\";\nimport \"../../assets/translations/i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignInScreen = function SignInScreen() {\n  {}\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rememberMe = _useState6[0],\n      setRememberMe = _useState6[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height,\n      width = _useWindowDimensions.width;\n\n  var navigation = useNavigation();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var onSignInPressed = function onSignInPressed() {\n    navigation.navigate('Home');\n  };\n\n  var onForgotPasswordPressed = function onForgotPasswordPressed() {\n    navigation.navigate('ForgotPassword');\n  };\n\n  var onSignUpPressed = function onSignUpPressed() {\n    navigation.navigate('SignUp');\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: styles.scrollContainer,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        source: Logo,\n        style: [styles.logo, {\n          height: height * 0.3,\n          width: width * 0.75\n        }],\n        resizeMode: \"contain\"\n      }), _jsx(CustomInput, {\n        placeholder: t('emailInputPlaceholder'),\n        value: email,\n        setValue: setEmail,\n        keyboardType: \"email-address\",\n        errorMessage: InvalidEmailMessage,\n        pattern: EmailRegex,\n        marginVertical: 10\n      }), _jsx(CustomInput, {\n        placeholder: t('passwordInputPlaceholder'),\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true,\n        errorMessage: InvalidPasswordMessage,\n        pattern: PasswordRegex,\n        marginVertical: 10\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          marginBottom: 10\n        },\n        children: [_jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          children: [_jsx(CheckBox, {\n            value: rememberMe,\n            onValueChange: setRememberMe\n          }), _jsx(Text, {\n            style: {\n              marginLeft: 5\n            },\n            children: t('rememberMe')\n          })]\n        }), _jsx(View, {\n          style: {\n            flex: 0.5\n          }\n        }), _jsx(View, {\n          style: {\n            flex: 1.3,\n            marginBottom: 10\n          },\n          children: _jsx(CustomButton, {\n            onPress: onForgotPasswordPressed,\n            text: t('forgotPasswordButtonText'),\n            type: \"Tertiary\",\n            padding: 0.1,\n            marginVertical: 0.1,\n            fgColor: theme.colors.black\n          })\n        })]\n      }), _jsx(CustomButton, {\n        testID: \"SignInButton\",\n        onPress: onSignInPressed,\n        text: t('signInButtonText'),\n        bgColor: theme.colors.darkPrimary\n      }), _jsx(CustomButton, {\n        testID: \"SignUpButton\",\n        onPress: onSignUpPressed,\n        text: t('signUpButtonText'),\n        type: \"Secondary\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    backgroundColor: theme.colors.bgColor\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 20\n  },\n  logo: {\n    flex: 1,\n    marginBottom: 10\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","useNavigation","CustomInput","CustomButton","Logo","CheckBox","EmailRegex","InvalidEmailMessage","PasswordRegex","InvalidPasswordMessage","theme","useTranslation","SignInScreen","email","setEmail","password","setPassword","rememberMe","setRememberMe","useWindowDimensions","height","width","navigation","t","i18n","onSignInPressed","navigate","onForgotPasswordPressed","onSignUpPressed","styles","scrollContainer","container","logo","flexDirection","marginBottom","flex","marginLeft","colors","black","darkPrimary","StyleSheet","create","backgroundColor","bgColor","alignItems","padding"],"sources":["C:/Users/VALDEZ GAMING/Documents/GitHub/Mech-Workshop-Service-Track/MWST-Frontend/Service/src/screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, Image, useWindowDimensions, ScrollView } from 'react-native'\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport Logo from '../../assets/LogoOficial.png'\r\nimport CheckBox from 'expo-checkbox';\r\nimport { EmailRegex, InvalidEmailMessage, PasswordRegex, InvalidPasswordMessage } from '../Constants'\r\nimport theme from '../Theme'\r\nimport '../../assets/translations/i18n'\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SignInScreen = () => {\r\n    {/* Example: https://programmingwithmosh.com/react-native/make-api-calls-in-react-native-using-fetch/\r\n        Example: https://www.youtube.com/watch?v=ON-Z1iD6Y-c Minute: 38:00\r\n    \r\n    useEffect(() => {\r\n        fetch('http://localhost:44890/api/Login')\r\n        .then((response) => response.json())\r\n        .then((json) => setData(json))\r\n        .catch((error) => console.error(error))\r\n        .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    componentMounted() {\r\n        this.useEffect();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            userLogin\r\n        } = this.state;\r\n\r\n        return(\r\n            // Here goes HTML constructor\r\n        )\r\n    }\r\n\r\n    */}\r\n\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [ rememberMe, setRememberMe ] = useState(false)\r\n\r\n    const { height, width } = useWindowDimensions()\r\n    const navigation = useNavigation()\r\n    const { t, i18n } = useTranslation()\r\n\r\n    const onSignInPressed = () => {\r\n        // console.log('Sign in pressed')\r\n        // const user = {\r\n        //     username: 'Carlos Roque',\r\n        //     password: 12345,\r\n        // }\r\n        // fetch(`http://10.0.0.7:44890/api/Login?username=${user.username}&password=${user.password}`, {\r\n        //     method: 'GET',\r\n        // })\r\n        //     .then(response => response.json())\r\n        //     .then(result => console.log(result))\r\n        //     .catch(error => console.log(error))\r\n        navigation.navigate('Home')\r\n    }\r\n\r\n    const onForgotPasswordPressed = () => {\r\n        navigation.navigate('ForgotPassword')\r\n    }\r\n    /*\r\n    const onSignInFacebook = () => {\r\n        console.warn('Sign in with facebook')\r\n    }\r\n\r\n    const onSignInGoogle = () => {\r\n        console.warn('Sign in with google')\r\n    }\r\n\r\n    const onSignInApple = () => {\r\n        console.warn('Sign in with apple')\r\n    }\r\n    */\r\n    const onSignUpPressed = () => {\r\n        navigation.navigate('SignUp')\r\n    }\r\n\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false} style={styles.scrollContainer}>\r\n            <View style={styles.container}>\r\n                <Image \r\n                    source={Logo} \r\n                    style={[styles.logo, {height: height * 0.3, width: width * 0.75}]} \r\n                    resizeMode='contain'\r\n                />\r\n                \r\n                <CustomInput placeholder={t('emailInputPlaceholder')} value={email} setValue={setEmail} keyboardType='email-address'\r\n                    errorMessage={InvalidEmailMessage} pattern={EmailRegex} marginVertical={10}\r\n                />\r\n                <CustomInput placeholder={t('passwordInputPlaceholder')} value={password} setValue={setPassword} secureTextEntry\r\n                    errorMessage={InvalidPasswordMessage} pattern={PasswordRegex} marginVertical={10}\r\n                />\r\n                \r\n                <View style={{flexDirection: 'row', marginBottom: 10}}>\r\n                    <View style={{flex: 1, flexDirection: 'row'}}>\r\n                        <CheckBox value={rememberMe} onValueChange={setRememberMe}/>\r\n                        <Text style={{marginLeft: 5}}>{t('rememberMe')}</Text>\r\n                    </View>\r\n                    <View style={{flex: 0.5}}></View>\r\n                    <View style={{flex: 1.3, marginBottom: 10}}>\r\n                        <CustomButton onPress={onForgotPasswordPressed} text={t('forgotPasswordButtonText')} type='Tertiary'\r\n                            padding={0.1} marginVertical={0.1} fgColor={theme.colors.black} />\r\n                    </View>\r\n                </View>\r\n\r\n                <CustomButton testID='SignInButton' onPress={onSignInPressed} text={t('signInButtonText')} \r\n                    bgColor={theme.colors.darkPrimary} />\r\n\r\n                {/*<CustomButton onPress={onSignInFacebook} text='Entrar con Facebook' bgColor='#E7EAF4' fgColor='#4765A9'/>\r\n                <CustomButton onPress={onSignInGoogle} text='Entrar con Google' bgColor='#FAE9EA' fgColor='#DD4D44'/>\r\n                <CustomButton onPress={onSignInApple} text='Entrar con Apple' bgColor='#e3e3e3' fgColor='#363636'/>\r\n                */}\r\n                <CustomButton testID='SignUpButton' onPress={onSignUpPressed} text={t('signUpButtonText')} type='Secondary'/>\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollContainer: {\r\n        backgroundColor: theme.colors.bgColor,\r\n    },\r\n    container: {\r\n        flex: 1, \r\n        alignItems: 'center',\r\n        padding: 20,\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        marginBottom: 10,\r\n    }\r\n})\r\n\r\nexport default SignInScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}