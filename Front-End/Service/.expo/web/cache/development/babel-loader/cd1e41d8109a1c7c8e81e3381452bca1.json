{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport theme from \"../Theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CustomInput = function CustomInput(_ref) {\n  var value = _ref.value,\n    setValue = _ref.setValue,\n    placeholder = _ref.placeholder,\n    secureTextEntry = _ref.secureTextEntry,\n    keyboardType = _ref.keyboardType,\n    errorMessage = _ref.errorMessage,\n    pattern = _ref.pattern;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showErrorText = _useState2[0],\n    setShowErrorText = _useState2[1];\n  var handleChange = function handleChange(value) {\n    if (typeof pattern !== 'undefined') {\n      var regex = new RegExp(pattern);\n      if (regex.test(value)) {\n        setShowErrorText(false);\n      } else {\n        setShowErrorText(true);\n      }\n    }\n    setValue(value);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        value: value,\n        onChangeText: handleChange,\n        placeholder: placeholder,\n        placeholderTextColor: theme.colors.gray,\n        secureTextEntry: secureTextEntry,\n        keyboardType: keyboardType\n      })\n    }), showErrorText && _jsx(Text, {\n      style: styles.errorMessage,\n      children: errorMessage\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%'\n  },\n  inputContainer: {\n    backgroundColor: theme.colors.entriesBackground,\n    width: '100%',\n    borderColor: '#e8e8e8',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginVertical: 5\n  },\n  textInput: {\n    color: theme.colors.white\n  },\n  errorMessage: {\n    color: 'red'\n  }\n});\nexport default CustomInput;","map":{"version":3,"names":["React","useRef","useState","theme","CustomInput","value","setValue","placeholder","secureTextEntry","keyboardType","errorMessage","pattern","showErrorText","setShowErrorText","handleChange","regex","RegExp","test","styles","container","inputContainer","textInput","colors","gray","StyleSheet","create","width","backgroundColor","entriesBackground","borderColor","borderWidth","borderRadius","paddingHorizontal","paddingVertical","marginVertical","color","white"],"sources":["C:/Users/Mariopp126/Escritorio/Proyecto-final/Mech-Workshop-Service-Track/Front-End/Service/src/components/CustomInput.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { View, TextInput, StyleSheet, Text } from 'react-native'\r\nimport theme from '../Theme'\r\n\r\nconst CustomInput = ({value, setValue, placeholder, secureTextEntry, keyboardType, errorMessage, pattern}) => {\r\n    const [ showErrorText, setShowErrorText ] = useState(false)\r\n\r\n    const handleChange = (value) => {\r\n        if (typeof pattern !== 'undefined') {\r\n            const regex = new RegExp(pattern)\r\n            if (regex.test(value)) {\r\n                setShowErrorText(false)\r\n            }\r\n            else {\r\n                setShowErrorText(true)\r\n            }\r\n        }\r\n\r\n        setValue(value)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput style={styles.textInput}\r\n                    value={value}\r\n                    onChangeText={handleChange}\r\n                    placeholder={placeholder}\r\n                    placeholderTextColor={theme.colors.gray}\r\n                    secureTextEntry={secureTextEntry}\r\n                    keyboardType={keyboardType}\r\n                />\r\n            </View>\r\n            { showErrorText &&\r\n                <Text\r\n                    style={styles.errorMessage}\r\n                >\r\n                    {errorMessage}\r\n                </Text>\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: '100%'\r\n    },\r\n    inputContainer: {\r\n        backgroundColor: theme.colors.entriesBackground,\r\n        width: '100%',\r\n\r\n        borderColor: '#e8e8e8',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 5,\r\n        marginVertical: 5\r\n    },\r\n    textInput: {\r\n        color: theme.colors.white,\r\n    },\r\n    errorMessage: {\r\n        color: 'red',\r\n    },\r\n})\r\n\r\nexport default CustomInput"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAEhD,OAAOC,KAAK;AAAgB;AAAA;AAE5B,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAA6F;EAAA,IAAxFC,KAAK,QAALA,KAAK;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,WAAW,QAAXA,WAAW;IAAEC,eAAe,QAAfA,eAAe;IAAEC,YAAY,QAAZA,YAAY;IAAEC,YAAY,QAAZA,YAAY;IAAEC,OAAO,QAAPA,OAAO;EACpG,gBAA4CT,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAnDU,aAAa;IAAEC,gBAAgB;EAEvC,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIT,KAAK,EAAK;IAC5B,IAAI,OAAOM,OAAO,KAAK,WAAW,EAAE;MAChC,IAAMI,KAAK,GAAG,IAAIC,MAAM,CAACL,OAAO,CAAC;MACjC,IAAII,KAAK,CAACE,IAAI,CAACZ,KAAK,CAAC,EAAE;QACnBQ,gBAAgB,CAAC,KAAK,CAAC;MAC3B,CAAC,MACI;QACDA,gBAAgB,CAAC,IAAI,CAAC;MAC1B;IACJ;IAEAP,QAAQ,CAACD,KAAK,CAAC;EACnB,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAEa,MAAM,CAACC,SAAU;IAAA,WAC1B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,cAAe;MAAA,UAC/B,KAAC,SAAS;QAAC,KAAK,EAAEF,MAAM,CAACG,SAAU;QAC/B,KAAK,EAAEhB,KAAM;QACb,YAAY,EAAES,YAAa;QAC3B,WAAW,EAAEP,WAAY;QACzB,oBAAoB,EAAEJ,KAAK,CAACmB,MAAM,CAACC,IAAK;QACxC,eAAe,EAAEf,eAAgB;QACjC,YAAY,EAAEC;MAAa;IAC7B,EACC,EACLG,aAAa,IACX,KAAC,IAAI;MACD,KAAK,EAAEM,MAAM,CAACR,YAAa;MAAA,UAE1BA;IAAY,EACV;EAAA,EAER;AAEf,CAAC;AAED,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC7BN,SAAS,EAAE;IACPO,KAAK,EAAE;EACX,CAAC;EACDN,cAAc,EAAE;IACZO,eAAe,EAAExB,KAAK,CAACmB,MAAM,CAACM,iBAAiB;IAC/CF,KAAK,EAAE,MAAM;IAEbG,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IAEfC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,CAAC;IAClBC,cAAc,EAAE;EACpB,CAAC;EACDb,SAAS,EAAE;IACPc,KAAK,EAAEhC,KAAK,CAACmB,MAAM,CAACc;EACxB,CAAC;EACD1B,YAAY,EAAE;IACVyB,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAe/B,WAAW"},"metadata":{},"sourceType":"module"}